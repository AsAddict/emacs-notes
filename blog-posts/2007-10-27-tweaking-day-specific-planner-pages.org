#+TITLE: Tweaking day-specific planner pages

October 27th, 2007 -
[[http://sachachua.com/blog/p/4422][http://sachachua.com/blog/p/4422]]

If you set planner-day-page-template to a function. Planner invokes
 the function when creating a new day page. This means that you can do
 all sorts of stuff. For example, to include the day name in your day
 template, add the following code to your ~/.emacs:

#+BEGIN_EXAMPLE
    (setq planner-day-page-template (lambda ()
      "Day page template for Sacha."
      (let ((date (planner-filename-to-calendar-date (planner-page-name))))
        (insert (calendar-day-name date) "\n* Tasks\n\n\n* Schedule\n\n\n* Notes\n"))))
#+END_EXAMPLE

Let's say that you wanted to have day-specific messages:

#+BEGIN_EXAMPLE
    (setq planner-day-page-template (lambda ()
      "Day page template for Sacha."
      (let* ((date (planner-filename-to-calendar-date (planner-page-name)))
             (day (calendar-day-of-week date)))
        (insert (cond
                 ;; Day of week starts from 0
                 ((= day 0) "Woohoo! Sunday!")
                 ((= day 1) "Oh no, it's Monday")
                 ((= day 5) "T.G.I.F.!")
                 ((= day 6) "I love Saturdays.")
                 ;; The rest of the days
                 (t "Is it Friday yet?"))
                "\n\n* Tasks\n\n\n* Schedule\n\n\n* Notes\n\n"))))
#+END_EXAMPLE

... although you might want to have a more upbeat way to think of
weekdays. ;)

You could do lots of things to your day page template. You could
 include one line describing your career goals into your planner every
 weekday and one about your personal goals every weekend. You could use
 fortune to include a random work-related joke or quotation during the
 weekday and a fun-related one during the weekend. You can even include
 text based on the current month or day or year, if you wanted.

It pays to learn Emacs Lisp. Crazy Emacs geeks like me
 build all sorts of entry points for customization, so you're really
 just limited by your imagination. =)

Random Emacs symbol: w3m-toggle-inline-images-internal -- Command:
 Toggle displaying of inline images on current buffer.

On Technorati: [[http://www.technorati.com/tag/emacs][emacs]]
